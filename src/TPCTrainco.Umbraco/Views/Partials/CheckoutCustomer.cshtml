@model TPCTrainco.Umbraco.Extensions.Models.CheckoutCustomer
@{
    IPublishedContent currentNode = UmbracoContext.Current.PublishedContentRequest.PublishedContent;

    if (Model == null)
    {
        Response.Redirect("/");
    }
    else if (false == string.IsNullOrEmpty(Model.Redirect))
    {
        Response.Redirect(Model.Redirect);
    }

    string sClass = "form-control";
    if (!string.IsNullOrEmpty(Model.PaymentType))
    {
        sClass += " disabled";
    }
}

@Html.Partial("Messages/MessagesTop", currentNode)
<div class="register-standalone">
    <div class="container-fluid register-top register-two-top">
        <div class="container">
            <div class="jumbotron">
                <h1>Payment</h1>
                <ul class="indicator">
                    <li class="step step1"></li>
                    <li class="line line1"></li>
                    <li class="step step2"></li>
                    <li class="line line2"></li>
                    <li class="step step3"></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="col-md-12 form-item-wrapper">
            @using (Html.BeginUmbracoForm<TPCTrainco.Umbraco.Controllers.CheckoutCustomerSurfaceController>("HandleFormSubmit"))
            {
                <div>
                    <div class="company-profile-container container">
                        <div class="col-xs-12 col-md-11">
                            <h2 class="form-head">Registration Source</h2>
                        </div>
                        <div class="col-xs-11 col-sm-5">
                            <div class="form-group">
                                @Html.DropDownListFor(p => p.HearAbout, TPCTrainco.Umbraco.Extensions.Objects.FormUtilities.HearAboutList(), new { @class = "form-control" })
                                @Html.ValidationMessageFor(p => p.HearAbout)
                            </div>
                        </div>
                        <div class="col-xs-11 col-sm-4">
                            <div class="form-group promo-wrap">
                                @Html.TextBoxFor(p => p.PromoCode, new { @class = "form-control", placeholder = "Promo code or description of mailer" })
                                @Html.ValidationMessageFor(p => p.PromoCode)
                                @Html.TextBoxFor(p => p.HearAboutOther, new { @class = "form-control", placeholder = "Brief description" })
                                @Html.ValidationMessageFor(p => p.HearAboutOther)
                            </div>
                        </div>
                    </div>
                </div>

                <div>
                    <div class="company-profile-container container">
                        <div class="col-xs-12 col-md-11">
                            <h2 class="form-head">Company Profile</h2>
                        </div>
                        @if (false == string.IsNullOrEmpty(Model.UserToken) && ViewData.ModelState.IsValid)
                        {
                            <div class="col-xs-12 immutable-account-info">
                                <span class="account-data">@(Model.FirstName) @(Model.LastName)</span>
                                <span class="account-data">@(Model.Email)</span>
                            </div>
                            <div class="col-xs-12 immutable-account-info">
                                <span class="account-data">@(Model.Company)</span>
                                <span class="account-data">@(Model.Address) @(Model.Address2)</span>
                                <span class="account-data">@(Model.City), @(Model.State) @(Model.Zip)</span>
                                <span class="account-data">@(Model.Country)</span>
                                <span class="account-data">@(Model.Phone) @(false == string.IsNullOrWhiteSpace(Model.PhoneExt) ? " Ext. " + Model.PhoneExt : "")</span>
                            </div>
                            <div class="col-xs-12 immutable-account-info">
                                <a id="link-edit-profile" href="#edit-company-profile" class="edit-profile">Edit Company Profile</a>
                            </div>
                        }
                        <div class="billing-opts-wrapper company-profile-wrap" @(Html.Raw(false == string.IsNullOrEmpty(Model.UserToken) && ViewData.ModelState.IsValid ? " style=\"display: none;\"" : ""))>
                            <div class="col-xs-12 col-sm-6 col-md-5">
                                <div class="form-group">
                                    @Html.TextBoxFor(p => p.FirstName, new { @class = "form-control", placeholder = "First Name" })
                                    @Html.ValidationMessageFor(p => p.FirstName)
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group">
                                    @Html.TextBoxFor(p => p.LastName, new { @class = "form-control", placeholder = "Last Name" })
                                    @Html.ValidationMessageFor(p => p.LastName)
                                </div>
                            </div>
                            @if (true == string.IsNullOrEmpty(Model.UserToken))
                            {
                                <div class="col-xs-12 col-md-11">
                                    <div class="form-group">
                                        @Html.TextBoxFor(p => p.Email, new { @class = "form-control", placeholder = "Email Address" })
                                        @Html.ValidationMessageFor(p => p.Email)
                                    </div>
                                </div>
                            }
                            <div class="col-xs-12 col-md-11">
                                <div class="form-group">
                                    @Html.TextBoxFor(p => p.Company, new { @class = "form-control", placeholder = "Company Name" })
                                    @Html.ValidationMessageFor(p => p.Company)
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-11">
                                <div class="form-group">
                                    @Html.TextBoxFor(p => p.Title, new { @class = "form-control", placeholder = "Title" })
                                    @Html.ValidationMessageFor(p => p.Title)
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-11">
                                <div class="form-group">
                                    @Html.TextBoxFor(p => p.Address, new { @class = "form-control", placeholder = "Mailing Address" })
                                    @Html.ValidationMessageFor(p => p.Address)
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-11">
                                <div class="form-group">
                                    @Html.TextBoxFor(p => p.Address2, new { @class = "form-control", placeholder = "Mailing Address Line 2 (office, building or facility name/number)" })
                                    @Html.ValidationMessageFor(p => p.Address2)
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-3">
                                <div class="form-group">
                                    @Html.DropDownListFor(p => p.Country, TPCTrainco.Umbraco.Extensions.Objects.FormUtilities.GetCountryList(true), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(p => p.Country)
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-3">
                                <div class="form-group">
                                    @Html.TextBoxFor(p => p.City, new { @class = "form-control", placeholder = "City" })
                                    @Html.ValidationMessageFor(p => p.City)
                                </div>
                            </div>
                            <!-- 2 -->
                            <div class="col-xs-12 col-sm-6 col-md-3">
                                <div class="form-group">
                                    @Html.DropDownListFor(p => p.State, TPCTrainco.Umbraco.Extensions.Objects.FormUtilities.GetStateList(), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(p => p.State)
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-2">
                                <div class="form-group">
                                    @Html.TextBoxFor(p => p.Zip, new { @class = "form-control", placeholder = "Postal Code" })
                                    @Html.ValidationMessageFor(p => p.Zip)
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3">
                                <div class="form-group">
                                    @Html.TextBoxFor(p => p.Phone, new { @class = "form-control", placeholder = "Phone Number" })
                                    @Html.ValidationMessageFor(p => p.Phone)
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3">
                                <div class="form-group">
                                    <div class="extension-container">
                                        <div class="extension-label-container"><label class="label-extension" for="PhoneExt">Ext.</label></div>
                                        <div class="extension-input-container">
                                            @Html.TextBoxFor(p => p.PhoneExt, new { @class = "form-control", placeholder = "Phone Extension" })
                                            @Html.ValidationMessageFor(p => p.PhoneExt)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @if (false == string.IsNullOrEmpty(Model.UserToken))
                            {
                                <div class="col-xs-12 col-md-11">
                                    <input type="checkbox" name="field-account-update" id="field-account-update">
                                    <label for="field-account-update" style="">
                                        Save and update my profile with this information
                                    </label>
                                    @Html.HiddenFor(p => p.UpdateCompanyProfile)
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div>
                    <div class="company-profile-container container">
                        <div class="billing-opts-wrapper">
                            <div class="col-xs-12 col-md-11">
                                <h2 class="form-head">Billing Information</h2>
                            </div>
                            <div class="col-xs-12 col-md-11">
                                <input type="checkbox" name="supervisor-diff" id="supervisor-diff">
                                <label for="supervisor-diff">Is your billing person different? If yes, check this box.</label>
                                @Html.HiddenFor(p => p.BillingDifferent)
                                @Html.HiddenFor(p => p.SavedCompanyBilling)
                            </div>
                            <!-- form fields that appear when checkbox is checked -->
                            <div class="hidden-different-check">
                                <div class="col-xs-12 col-sm-6 col-md-5">
                                    <div class="form-group">
                                        @Html.TextBoxFor(p => p.BillFirstName, new { @class = "form-control", placeholder = "First Name" })
                                        @Html.ValidationMessageFor(p => p.BillFirstName)
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6">
                                    <div class="form-group">
                                        @Html.TextBoxFor(p => p.BillLastName, new { @class = "form-control", placeholder = "Last Name" })
                                        @Html.ValidationMessageFor(p => p.BillLastName)
                                    </div>
                                </div>
                                <div class="col-xs-12 col-md-11">
                                    <div class="form-group">
                                        @Html.TextBoxFor(p => p.BillEmail, new { @class = "form-control", placeholder = "Email Address" })
                                        @Html.ValidationMessageFor(p => p.BillEmail)
                                    </div>
                                </div>
                                <div class="col-xs-12 col-md-11">
                                    <div class="form-group">
                                        @Html.TextBoxFor(p => p.BillAddress, new { @class = "form-control", placeholder = "Mailing Address" })
                                        @Html.ValidationMessageFor(p => p.BillAddress)
                                    </div>
                                </div>
                                <div class="col-xs-12 col-md-11">
                                    <div class="form-group">
                                        @Html.TextBoxFor(p => p.BillAddress2, new { @class = "form-control", placeholder = "Mailing Address line 2" })
                                        @Html.ValidationMessageFor(p => p.BillAddress2)
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        @Html.DropDownListFor(p => p.BillCountry, TPCTrainco.Umbraco.Extensions.Objects.FormUtilities.GetCountryList(true), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(p => p.BillCountry)
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        @Html.TextBoxFor(p => p.BillCity, new { @class = "form-control", placeholder = "City" })
                                        @Html.ValidationMessageFor(p => p.BillCity)
                                    </div>
                                </div>
                                <!-- 2 -->
                                <div class="col-xs-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        @Html.DropDownListFor(p => p.BillState, TPCTrainco.Umbraco.Extensions.Objects.FormUtilities.GetStateList(), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(p => p.BillState)
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-2">
                                    <div class="form-group">
                                        @Html.TextBoxFor(p => p.BillZip, new { @class = "form-control", placeholder = "Postal Code" })
                                        @Html.ValidationMessageFor(p => p.BillZip)
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <div class="form-group">
                                        @Html.TextBoxFor(p => p.BillPhone, new { @class = "form-control", placeholder = "Phone Number" })
                                        @Html.ValidationMessageFor(p => p.BillPhone)
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <div class="form-group">
                                        <div class="extension-container">
                                            <div class="extension-label-container"><label class="label-extension" for="PhoneExt">Ext.</label></div>
                                            <div class="extension-input-container">
                                                @Html.TextBoxFor(p => p.BillPhoneExt, new { @class = "form-control", placeholder = "Phone Extension" })
                                                @Html.ValidationMessageFor(p => p.BillPhoneExt)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @if (false == string.IsNullOrEmpty(Model.UserToken))
                                {
                                    <div class="col-xs-12 col-md-11">
                                        <input type="checkbox" name="field-billing-update" id="field-billing-update">
                                        <label class="billing-update" for="field-billing-update">
                                            Save and update my profile with this billing information
                                        </label>
                                        @Html.HiddenFor(p => p.UpdateCompanyBilling)
                                    </div>
                                }
                            </div>
                        </div>
                        <!-- end form fields that appear when checkbox is checked -->
                        
                        <div class="billing-opts-container">
                            <div>
                                <div class="col-xs-12 col-sm-4 col-md-3">
                                    <div class="vcenter">
                                        <label class="billing-opts-label" for="billing-opts">Choose your payment type</label>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-5">
                                    @Html.DropDownListFor(p => p.PaymentType, TPCTrainco.Umbraco.Extensions.Objects.FormUtilities.PaymentTypeList(), new { @class = sClass })
                                    @Html.ValidationMessageFor(p => p.PaymentType)
                                </div>
                            </div>
                        </div>
                        <!-- start credit card info -->
                        <div class="cc-info">
                            <div class="col-xs-12 col-md-11">
                                <div class="form-group">
                                    @Html.TextBoxFor(p => p.CCName, new { @class = "form-control", placeholder = "Name on card" })
                                    @Html.ValidationMessageFor(p => p.CCName)
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-11">
                                <div class="form-group">
                                    @Html.TextBoxFor(p => p.CCNumber, new { @class = "form-control", placeholder = "Card number" })
                                    @Html.ValidationMessageFor(p => p.CCNumber)
                                </div>
                            </div>
                            <div class="col-xs-11 col-sm-6 col-md-3">
                                <div class="form-group">
                                    @Html.TextBoxFor(p => p.CCExpiration, new { @class = "form-control", placeholder = "Expiration: MM/YY" })
                                    @Html.ValidationMessageFor(p => p.CCExpiration)
                                </div>
                            </div>
                            <div class="col-xs-11 col-sm-6 col-md-3">
                                <div class="form-group">
                                    @Html.TextBoxFor(p => p.CVVCode, new { @class = "form-control", placeholder = "CVV" })
                                    @Html.ValidationMessageFor(p => p.CVVCode)
                                </div>
                            </div>
                            <div class="col-xs-11 col-sm-6 col-md-3">
                                <div class="cvv-info form-group">
                                    <p class="cvv-text">
                                        What's this?
                                        <span>
                                            <img src="/assets/images/cvv_visa.gif">Three-digit number on the back of your card.
                                        </span>
                                    </p>
                                </div>
                            </div>
                        </div>
                        <!-- end credit card info -->
                        @if (true == currentNode.HasValue("invoice"))
                        {
                            <div class="col-xs-12 col-md-11 invoice-info">
                                <p>@(currentNode.GetPropertyValue<string>("invoice"))</p>
                            </div>
                        }
                        <div class="invoice-info">
                            <div class="col-xs-12 col-md-11">
                                <div class="form-group">
                                    @Html.TextBoxFor(p => p.PONumber, new { @class = "form-control", placeholder = "PO Number" })
                                    @Html.ValidationMessageFor(p => p.PONumber)
                                </div>
                            </div>
                        </div>
                        @Html.HiddenFor(p => p.CartGuid)
                        @Html.HiddenFor(p => p.LoggedIn)
                    </div>
                    <div class="card-submit-wrap col-xs-12 col-md-11">
                        <button type="submit" id="button-submit" class="btn btn-reg btn-blue-solid next-btn">Next</button>
                        <div class="spinner card-loader">
                            <div class="bounce1"></div>
                            <div class="bounce2"></div>
                            <div class="bounce3"></div>
                        </div>
                        <p class="processing-msg"></p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
